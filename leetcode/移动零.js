// 
// 题目：给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。
// 解题说明
// 1. 不能使用额外的数组空间
// 2. 必须在原数组上操作，不能拷贝额外的数组
// 3. 尽量减少操作次数
//  解题思路
// 1. 两个指针，一个指向0，一个指向非0
// 2. 遍历数组，如果遇到非0，就和指向0的指针交换位置，然后两个指针都向后移动一位
// 3. 如果遇到0，就只移动指向0的指针
// 4. 遍历结束，返回数组
// 5. 时间复杂度O(n), 空间复杂度O(1)
// 6. 代码如下
let moveZero = (nums) => {
    let i = 0;
    let j = 0;
    while(i<nums.length) {
        if(nums[i] !== 0) {
            let temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
            j++;
        }
        i++;
    }
    return nums;
}

console.log(moveZero([0,1,0,3,12]))